
R version 2.8.0 (2008-10-20)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> set.seed(290875)
> library("party")
Loading required package: survival
Loading required package: splines
Loading required package: grid
Loading required package: modeltools
Loading required package: stats4
Loading required package: coin
Loading required package: mvtnorm
Loading required package: zoo

Attaching package: 'zoo'


	The following object(s) are masked from package:base :

	 as.Date.numeric 

Loading required package: sandwich
Loading required package: strucchange
Loading required package: vcd
Loading required package: MASS
Loading required package: colorspace
> if (!require("ipred"))
+     stop("cannot load package ipred")
Loading required package: ipred
Loading required package: rpart
Loading required package: mlbench
Loading required package: nnet
Loading required package: class
> if (!require("coin"))
+     stop("cannot load package coin")
> 
> data("GlaucomaM", package = "ipred")
> rf <- cforest(Class ~ ., data = GlaucomaM, control = cforest_control(ntree = 100))
> stopifnot(mean(GlaucomaM$Class != predict(rf)) < 
+           mean(GlaucomaM$Class != predict(rf, OOB = TRUE)))
> 
> data("GBSG2", package = "ipred")
> rfS <- cforest(Surv(time, cens) ~ ., data = GBSG2, control = cforest_control(ntree = 100))
> treeresponse(rfS, newdata = GBSG2[1:2,])
$`1`
Call: survival:::survfit(formula = resp, weights = w, subset = w > 
    0)

      n  events  median 0.95LCL 0.95UCL 
   9238    3881    1814    1806    1814 

$`2`
Call: survival:::survfit(formula = resp, weights = w, subset = w > 
    0)

      n  events  median 0.95LCL 0.95UCL 
   4989    2367    1806    1587    1807 

> 
> ### give it a try, at least
> varimp(rf)
           ag            at            as            an            ai 
 0.0008594963  0.0007209614  0.0006887387  0.0006869036  0.0022948799 
          eag           eat           eas           ean           eai 
 0.0009386894 -0.0003955231  0.0011738154  0.0016381320  0.0007000744 
         abrg          abrt          abrs          abrn          abri 
 0.0053624023  0.0011377530  0.0065449183  0.0023212596  0.0047236404 
          hic          mhcg          mhct          mhcs          mhcn 
 0.0134229360  0.0011303540  0.0002739726  0.0005209986  0.0050906248 
         mhci          phcg          phct          phcs          phcn 
 0.0072888840  0.0087513166  0.0011285670  0.0031556590  0.0047102540 
         phci           hvc          vbsg          vbst          vbss 
 0.0079908023  0.0011687068  0.0001344323 -0.0009342446  0.0005634921 
         vbsn          vbsi          vasg          vast          vass 
 0.0019109589  0.0004190376  0.0008571429 -0.0002458419  0.0018156052 
         vasn          vasi          vbrg          vbrt          vbrs 
-0.0006612686  0.0023169159  0.0006969697  0.0009917467  0.0041538372 
         vbrn          vbri          varg          vart          vars 
 0.0005355819  0.0056179677  0.0341056984  0.0049173442  0.0223239750 
         varn          vari           mdg           mdt           mds 
 0.0095680186  0.0208571649  0.0000883619  0.0002721708 -0.0001351351 
          mdn           mdi           tmg           tmt           tms 
 0.0005338962  0.0004109589  0.0062488098  0.0005895152  0.0129647670 
          tmn           tmi            mr           rnf          mdic 
 0.0015380487  0.0099121608  0.0020572425  0.0084726600  0.0042333014 
          emd            mv 
 0.0023210111 -0.0008622079 
> 
> P <- proximity(rf)
> stopifnot(max(abs(P - t(P))) == 0)
> 
> P[1:10,1:10]
           2         43        25         65         70         16         6
2  1.0000000 0.17647059 0.6904762 0.62162162 0.10256410 0.14705882 0.7428571
43 0.1764706 1.00000000 0.2380952 0.14285714 0.04878049 0.26315789 0.2894737
25 0.6904762 0.23809524 1.0000000 0.58695652 0.17073171 0.14285714 0.7500000
65 0.6216216 0.14285714 0.5869565 1.00000000 0.08695652 0.05263158 0.7714286
70 0.1025641 0.04878049 0.1707317 0.08695652 1.00000000 0.10000000 0.2105263
16 0.1470588 0.26315789 0.1428571 0.05263158 0.10000000 1.00000000 0.1666667
6  0.7428571 0.28947368 0.7500000 0.77142857 0.21052632 0.16666667 1.0000000
5  0.5897436 0.14634146 0.5777778 0.72727273 0.09756098 0.07142857 0.8285714
12 0.6969697 0.16666667 0.6944444 0.75675676 0.08571429 0.05263158 0.8965517
63 0.7250000 0.26829268 0.7674419 0.60465116 0.12500000 0.26829268 0.8000000
            5         12        63
2  0.58974359 0.69696970 0.7250000
43 0.14634146 0.16666667 0.2682927
25 0.57777778 0.69444444 0.7674419
65 0.72727273 0.75675676 0.6046512
70 0.09756098 0.08571429 0.1250000
16 0.07142857 0.05263158 0.2682927
6  0.82857143 0.89655172 0.8000000
5  1.00000000 0.84615385 0.6341463
12 0.84615385 1.00000000 0.6750000
63 0.63414634 0.67500000 1.0000000
> 
> ### variable importances
> a <- cforest(Species ~ ., data = iris,
+              control = cforest_unbiased(mtry = 2, ntree = 10))
> varimp(a)
Sepal.Length  Sepal.Width Petal.Length  Petal.Width 
 0.034545455  0.007272727  0.323636364  0.296363636 
> varimp(a, conditional = TRUE)
Sepal.Length  Sepal.Width Petal.Length  Petal.Width 
  0.01090909   0.00000000   0.20000000   0.19090909 
> 
> airq <- subset(airquality, complete.cases(airquality))
> a <- cforest(Ozone ~ ., data = airq,
+              control = cforest_unbiased(mtry = 2, ntree = 10))
> varimp(a)   
  Solar.R      Wind      Temp     Month       Day 
185.91927 230.49127 663.84355  15.19328  11.33859 
> varimp(a, conditional = TRUE)
   Solar.R       Wind       Temp      Month        Day 
170.135269 168.474616 457.652054   8.074762  51.521322 
> 
> a <- cforest(ME ~ ., data = mammoexp, control = cforest_classical(ntree = 10))
> varimp(a)   
      SYMPT          PB        HIST         BSE        DECT 
0.019444501 0.022974248 0.020418853 0.001962509 0.009009464 
> varimp(a, conditional = TRUE)
      SYMPT          PB        HIST         BSE        DECT 
0.013582637 0.015666224 0.007866724 0.004648380 0.009691158 
> 
