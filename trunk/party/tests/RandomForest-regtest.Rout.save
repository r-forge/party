
R version 2.6.0 RC (2007-09-25 r42980)
Copyright (C) 2007 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> set.seed(290875)
> library("party")
Loading required package: survival
Loading required package: splines
Loading required package: grid
Loading required package: modeltools
Loading required package: stats4
Loading required package: coin
Loading required package: mvtnorm
Loading required package: zoo

Attaching package: 'zoo'


	The following object(s) are masked from package:base :

	 rapply 

Loading required package: sandwich
Loading required package: strucchange
Loading required package: vcd
Loading required package: MASS
Loading required package: colorspace
> if (!require("ipred"))
+     stop("cannot load package ipred")
Loading required package: ipred
Loading required package: rpart
Loading required package: mlbench
Loading required package: nnet
Loading required package: class
> if (!require("coin"))
+     stop("cannot load package coin")
> 
> data("GlaucomaM", package = "ipred")
> rf <- cforest(Class ~ ., data = GlaucomaM, control = cforest_control(ntree = 100))
> stopifnot(mean(GlaucomaM$Class != predict(rf)) < 
+           mean(GlaucomaM$Class != predict(rf, OOB = TRUE)))
> 
> data("GBSG2", package = "ipred")
> rfS <- cforest(Surv(time, cens) ~ ., data = GBSG2, control = cforest_control(ntree = 100))
> treeresponse(rfS, newdata = GBSG2[1:2,])
$`1`
Call: survival:::survfit(formula = resp, weights = w, subset = w > 
    0)

      n  events  median 0.95LCL 0.95UCL 
  10226    4394    1807    1806    1814 

$`2`
Call: survival:::survfit(formula = resp, weights = w, subset = w > 
    0)

      n  events  median 0.95LCL 0.95UCL 
   4907    2243    1807    1807    1814 

> 
> ### give it a try, at least
> varimp(rf)
     MeanDecreaseAccuracy Standard.Deviation
ag           7.146853e-04        0.008114121
at           1.011918e-03        0.007656569
as           8.183183e-04        0.006052365
an           1.254842e-03        0.006966014
ai           2.036752e-03        0.010162863
eag          1.315315e-04        0.003001676
eat         -1.286667e-04        0.007785949
eas          1.726688e-03        0.009180853
ean          6.832948e-04        0.006862206
eai          1.221636e-03        0.007768536
abrg         3.479608e-03        0.021208648
abrt         8.536584e-04        0.005881980
abrs         6.526015e-03        0.032603343
abrn         5.201829e-03        0.027026922
abri         5.406867e-03        0.025747009
hic          1.667234e-02        0.045528669
mhcg         2.292916e-03        0.014300812
mhct         2.526851e-05        0.002922250
mhcs         8.654468e-04        0.024778413
mhcn         3.277990e-03        0.018815475
mhci         6.160103e-03        0.020668657
phcg         8.961860e-03        0.030761189
phct         6.235257e-04        0.006291656
phcs         1.352039e-04        0.010243431
phcn         4.488385e-03        0.019753949
phci         6.813105e-03        0.023479543
hvc          1.910531e-03        0.016070276
vbsg         1.148475e-04        0.005156393
vbst        -6.654856e-04        0.004327769
vbss        -2.315802e-05        0.005517717
vbsn         1.136986e-03        0.010079672
vbsi         5.690976e-04        0.005121441
vasg        -7.385621e-04        0.005955590
vast         4.458874e-04        0.003337079
vass         1.991708e-03        0.012013600
vasn        -3.005388e-04        0.003464676
vasi         3.724687e-03        0.018978448
vbrg        -8.395303e-04        0.005907644
vbrt         8.436450e-04        0.011951496
vbrs         5.426415e-03        0.025632715
vbrn         5.355819e-04        0.004177695
vbri         5.140804e-03        0.025053793
varg         3.343922e-02        0.070104727
vart         4.061608e-03        0.015920387
vars         2.382859e-02        0.050841690
varn         7.395601e-03        0.030566711
vari         2.907070e-02        0.075770496
mdg          2.865030e-04        0.006218012
mdt          5.497964e-04        0.006994730
mds          1.351351e-04        0.001351351
mdn          1.397971e-04        0.004545705
mdi         -3.836329e-05        0.006759162
tmg          6.558649e-03        0.031320371
tmt          1.738121e-03        0.011837479
tms          1.295332e-02        0.038467301
tmn          1.125387e-03        0.006573773
tmi          1.081677e-02        0.032027530
mr           1.760853e-03        0.012063466
rnf          1.030206e-02        0.034011030
mdic         7.126014e-03        0.025823108
emd          1.387742e-03        0.011016591
mv           2.401021e-04        0.006046620
> 
> P <- proximity(rf)
> stopifnot(max(abs(P - t(P))) == 0)
> 
> P[1:10,1:10]
    2 43 25 65 70 16  6  5 12 63
2  62  7 29 23  5  7 27 23 22 30
43  7 66 10  6  3 11 12  9  7 11
25 29 10 66 25  6  6 29 23 22 33
65 23  6 25 66  3  2 28 31 27 24
70  5  3  6  3 65  3  8  5  2  6
16  7 11  6  2  3 62  7  5  3 12
6  27 12 29 28  8  7 58 31 25 29
5  23  9 23 31  5  5 31 64 30 27
12 22  7 22 27  2  3 25 30 54 26
63 30 11 33 24  6 12 29 27 26 64
> 
