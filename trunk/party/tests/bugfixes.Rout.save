
R version 2.4.0 Under development (unstable) (2006-07-16 r38625)
Copyright (C) 2006 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> set.seed(290875)
> gctorture(on = FALSE)
> library(party)
Loading required package: survival
Loading required package: splines
Loading required package: grid
Loading required package: modeltools
Loading required package: coin
Loading required package: mvtnorm
Loading required package: zoo
Loading required package: sandwich
Loading required package: strucchange
> gctorture(on = GCtorture)
> 
> ### get rid of the NAMESPACE
> nsparty <- attach(NULL, name="ns-party")
> .Internal(lib.fixup(asNamespace("party"), nsparty))
> 
> ### check nominal level printing
> set.seed(290875)
> x <- gl(5, 50)
> df <- data.frame(y = c(rnorm(50, 0), rnorm(50, 1), rnorm(50, 2), rnorm(50, 3), rnorm(50, 4)), 
+                  x = x, z = rnorm(250))
> ctree(y ~ x, data = df)

	 Conditional inference tree with 5 terminal nodes

Response:  y 
Input:  x 
Number of observations:  250 

1) x == {3, 4, 5}; criterion = 1, statistic = 159.215
  2) x == {4, 5}; criterion = 1, statistic = 54.696
    3) x == {5}; criterion = 1, statistic = 16.711
      4)*  weights = 50 
    3) x == {4}
      5)*  weights = 50 
  2) x == {3}
    6)*  weights = 50 
1) x == {1, 2}
  7) x == {2}; criterion = 1, statistic = 21.738
    8)*  weights = 50 
  7) x == {1}
    9)*  weights = 50 
> 
> ### check asymptotic vs. MonteCarlo, especially categorical splits after
> ### MonteCarlo resampling
> a <- ctree(y ~ x + z, data = df, control = ctree_control(stump = TRUE))
> b <- ctree(y ~ x + z, data = df,
+            control =  ctree_control(testtype = "Monte", stump = TRUE))
> stopifnot(isequal(a@tree$psplit, b@tree$psplit))  
> stopifnot(isequal(a@tree$criterion$statistic, b@tree$criterion$statistic))
> 
> ### we did not check the hyper parameters
> try(cforest_control(minsplit = -1))
Error in validObject(object@splitctrl) : invalid class "SplitControl" object: FALSE
In addition: Warning message:
no negative values allowed in objects of class ‘SplitControl’ in: validityMethod(object) 
> try(cforest_control(ntree = -1))
Error in validObject(RET) : invalid class "ForestControl" object: FALSE
In addition: Warning message:
‘ntree’ must be equal or greater 1 in: validityMethod(object) 
> try(cforest_control(maxdepth = -1))
Error in validObject(object@tgctrl) : invalid class "TreeGrowControl" object: FALSE
In addition: Warning message:
‘maxdepth’ must be positive in: validityMethod(object) 
> try(cforest_control(nresample = 10))
Error in validObject(object@gtctrl) : invalid class "GlobalTestControl" object: FALSE
In addition: Warning message:
‘nresample’ must be larger than 100 in: validityMethod(object) 
> 
