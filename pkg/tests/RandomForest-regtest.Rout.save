
R version 2.11.0 (2010-04-22)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> set.seed(290875)
> library("party")
Loading required package: survival
Loading required package: splines
Loading required package: grid
Loading required package: modeltools
Loading required package: stats4
Loading required package: coin
Loading required package: mvtnorm
Loading required package: zoo
Loading required package: sandwich
Loading required package: strucchange
Loading required package: vcd
Loading required package: MASS
Loading required package: colorspace
> if (!require("ipred"))
+     stop("cannot load package ipred")
Loading required package: ipred
Loading required package: rpart
Loading required package: mlbench
Loading required package: nnet
Loading required package: class
> if (!require("coin"))
+     stop("cannot load package coin")
> 
> data("GlaucomaM", package = "ipred")
> rf <- cforest(Class ~ ., data = GlaucomaM, control = cforest_control(ntree = 100))
> stopifnot(mean(GlaucomaM$Class != predict(rf)) < 
+           mean(GlaucomaM$Class != predict(rf, OOB = TRUE)))
> 
> data("GBSG2", package = "ipred")
> rfS <- cforest(Surv(time, cens) ~ ., data = GBSG2, control = cforest_control(ntree = 100))
> treeresponse(rfS, newdata = GBSG2[1:2,])
$`1`
records   n.max n.start  events  median 0.95LCL 0.95UCL 
    686   12028   12028    4813    1990    1814    1990 

$`2`
records   n.max n.start  events  median 0.95LCL 0.95UCL 
    686    4659    4659    2233    1502    1493    1701 

> 
> ### give it a try, at least
> varimp(rf)
           ag            at            as            an            ai 
 1.378143e-03  1.209502e-04  2.168549e-03  1.514677e-03  5.667840e-04 
          eag           eat           eas           ean           eai 
 1.412698e-03  6.944784e-04  1.330209e-04  5.859778e-04  1.107716e-03 
         abrg          abrt          abrs          abrn          abri 
 3.161966e-03  4.259328e-04  2.854476e-03  3.877337e-03  5.508606e-03 
          hic          mhcg          mhct          mhcs          mhcn 
 8.549616e-03  2.230695e-03 -2.072968e-05  5.757744e-04  7.067444e-04 
         mhci          phcg          phct          phcs          phcn 
 7.905153e-03  9.364023e-03  8.835635e-04 -6.822148e-06  2.760828e-03 
         phci           hvc          vbsg          vbst          vbss 
 1.532708e-02  5.644047e-03 -5.263158e-04 -2.631579e-04  7.012714e-04 
         vbsn          vbsi          vasg          vast          vass 
 3.487280e-03  8.027564e-03  1.545135e-03  6.978341e-04  1.650312e-04 
         vasn          vasi          vbrg          vbrt          vbrs 
 2.733615e-04  7.679438e-04  1.833333e-03  1.793247e-05  5.063291e-04 
         vbrn          vbri          varg          vart          vars 
 1.020071e-03  1.314567e-02  2.843290e-02  5.058854e-03  1.968965e-02 
         varn          vari           mdg           mdt           mds 
 1.645358e-02  2.553688e-02 -3.042254e-04  6.796128e-05 -1.097494e-05 
          mdn           mdi           tmg           tmt           tms 
 1.545523e-03  8.665070e-04  1.412770e-02 -3.284120e-04  1.052537e-02 
          tmn           tmi            mr           rnf          mdic 
-8.831169e-04  9.304242e-03  2.483731e-03  3.580956e-03  5.975207e-03 
          emd            mv 
 2.511682e-03  1.100651e-03 
There were 50 or more warnings (use warnings() to see the first 50)
> 
> P <- proximity(rf)
> stopifnot(max(abs(P - t(P))) == 0)
> 
> P[1:10,1:10]
           2        43        25        65        70         16         6
2  1.0000000 0.3125000 0.8250000 0.5250000 0.1764706 0.15151515 0.8285714
43 0.3125000 1.0000000 0.2250000 0.1428571 0.0882353 0.39473684 0.2105263
25 0.8250000 0.2250000 1.0000000 0.5384615 0.2285714 0.08823529 0.8333333
65 0.5250000 0.1428571 0.5384615 1.0000000 0.1081081 0.00000000 0.6500000
70 0.1764706 0.0882353 0.2285714 0.1081081 1.0000000 0.21875000 0.2000000
16 0.1515152 0.3947368 0.0882353 0.0000000 0.2187500 1.00000000 0.1578947
6  0.8285714 0.2105263 0.8333333 0.6500000 0.2000000 0.15789474 1.0000000
5  0.8000000 0.1842105 0.8055556 0.7948718 0.1363636 0.02631579 0.8048780
12 0.8571429 0.2000000 0.7428571 0.4736842 0.1842105 0.09523810 0.8000000
63 0.7027027 0.3421053 0.6190476 0.4791667 0.2222222 0.18604651 0.7560976
            5        12        63
2  0.80000000 0.8571429 0.7027027
43 0.18421053 0.2000000 0.3421053
25 0.80555556 0.7428571 0.6190476
65 0.79487179 0.4736842 0.4791667
70 0.13636364 0.1842105 0.2222222
16 0.02631579 0.0952381 0.1860465
6  0.80487805 0.8000000 0.7560976
5  1.00000000 0.8500000 0.7380952
12 0.85000000 1.0000000 0.7209302
63 0.73809524 0.7209302 1.0000000
> 
> ### variable importances
> a <- cforest(Species ~ ., data = iris,
+              control = cforest_unbiased(mtry = 2, ntree = 10))
> varimp(a)
Sepal.Length  Sepal.Width Petal.Length  Petal.Width 
   0.0600000    0.0000000    0.3672727    0.2309091 
> varimp(a, conditional = TRUE)
Sepal.Length  Sepal.Width Petal.Length  Petal.Width 
 0.003636364  0.000000000  0.234545455  0.154545455 
> 
> airq <- subset(airquality, complete.cases(airquality))
> a <- cforest(Ozone ~ ., data = airq,
+              control = cforest_unbiased(mtry = 2, ntree = 10))
> varimp(a)   
   Solar.R       Wind       Temp      Month        Day 
 18.709803 419.161930 468.897255  12.324762  -5.843064 
> varimp(a, conditional = TRUE)
   Solar.R       Wind       Temp      Month        Day 
 21.781398 310.203904 337.112896  -8.277057  14.038489 
> 
> a <- cforest(ME ~ ., data = mammoexp, control = cforest_classical(ntree = 10))
> varimp(a)   
      SYMPT          PB        HIST         BSE        DECT 
0.026676924 0.017718899 0.024070157 0.003977788 0.004566563 
Warning messages:
1: In varimp(a) :
  'varimp' with non-unity weights might give misleading results
2: In varimp(a) :
  'varimp' with non-unity weights might give misleading results
3: In varimp(a) :
  'varimp' with non-unity weights might give misleading results
4: In varimp(a) :
  'varimp' with non-unity weights might give misleading results
5: In varimp(a) :
  'varimp' with non-unity weights might give misleading results
6: In varimp(a) :
  'varimp' with non-unity weights might give misleading results
7: In varimp(a) :
  'varimp' with non-unity weights might give misleading results
8: In varimp(a) :
  'varimp' with non-unity weights might give misleading results
9: In varimp(a) :
  'varimp' with non-unity weights might give misleading results
10: In varimp(a) :
  'varimp' with non-unity weights might give misleading results
> varimp(a, conditional = TRUE)
      SYMPT          PB        HIST         BSE        DECT 
0.027007376 0.014911124 0.019483110 0.008703068 0.004605263 
Warning messages:
1: In varimp(a, conditional = TRUE) :
  'varimp' with non-unity weights might give misleading results
2: In varimp(a, conditional = TRUE) :
  'varimp' with non-unity weights might give misleading results
3: In varimp(a, conditional = TRUE) :
  'varimp' with non-unity weights might give misleading results
4: In varimp(a, conditional = TRUE) :
  'varimp' with non-unity weights might give misleading results
5: In varimp(a, conditional = TRUE) :
  'varimp' with non-unity weights might give misleading results
6: In varimp(a, conditional = TRUE) :
  'varimp' with non-unity weights might give misleading results
7: In varimp(a, conditional = TRUE) :
  'varimp' with non-unity weights might give misleading results
8: In varimp(a, conditional = TRUE) :
  'varimp' with non-unity weights might give misleading results
9: In varimp(a, conditional = TRUE) :
  'varimp' with non-unity weights might give misleading results
10: In varimp(a, conditional = TRUE) :
  'varimp' with non-unity weights might give misleading results
> 
